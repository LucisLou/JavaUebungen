package Uebung8;

import java.util.Random;
import java.util.Scanner;

public class TicTacToe {


    public static void main(String[] args) {

        Random random = new Random();

        char[][] tttField = {
                {' ', ' ', ' '},
                {' ', ' ', ' '},
                {' ', ' ', ' '}
        };

        int x;
        int y;
        int round = 0;
        boolean win = false;


        do {

            System.out.println("Field: ");
            printField(tttField);

            System.out.println("Please choose where you want to set your move:");
            System.out.println("Your move at the position x-axis, horizontal (0 - 2): ");
            x = validInput(0, 2);
            System.out.println("Your move at the position y-axis, vertical (0 - 2): ");
            y = validInput(0, 2);


            tttField = checkSpotPlayer(tttField, x, y);

            win = checkWinPlayer(tttField);
            if (win) {
                printField(tttField);
                System.out.println("You won! Hooray!");
            }
            round += 1;

            if (!win) {
                System.out.println("Your opponent will make a move...");
                x = random.nextInt(2 + 1 - 0); //min 0, max 2;
                y = random.nextInt(2 + 1 - 0); //min 0, max 2;

                tttField = checkSpotCP(tttField, x, y);
                win = checkWinCP(tttField);
                if (win) {
                    printField(tttField);
                    System.out.println("You lost! Too bad!");
                }
                round += 1;
            }

            if (round == 9) {
                printField(tttField);
                System.out.println("Game over! It's a draw!");
            }

        } while (round < 9 && !win);


    }

    public static int validInput(int outerBoundsSmaller, int outerBoundsBigger){
        //used to read user input and checks the validity of the user input

        Scanner scanner = new Scanner(System.in);

        int userInput = 0;

        try {
            userInput = scanner.nextInt();

            while (userInput < outerBoundsSmaller || userInput > outerBoundsBigger) {
                System.out.println("This is an invalid input. Please enter a number from 0 to 2.");
                userInput = scanner.nextInt();
            }

        } catch (Exception e) {

            System.out.println("This is an invalid input. Please enter a number from 0 to 2.");

        }

        return userInput;

    }

    public static char[][] checkSpotPlayer(char[][] tttField, int x, int y) {
        //checks the spot the player chose, if spot is taken, makes the user choose another spot

        while (tttField[x][y] != ' ') {

            System.out.println("Spot is already taken, please choose another spot.");
            System.out.println("Please choose where you want to set your move:");
            System.out.println("Your move at the position x-axis, horizontal (0 - 2): ");
            x = validInput(0, 2);
            System.out.println("Your move at the position y-axis, vertical (0 - 2): ");
            y = validInput(0, 2);

        }

        tttField[x][y] = 'O';

        return tttField;

    }

    public static char[][] checkSpotCP(char[][] tttField, int x, int y) {
        //checks the spot generated by the computer, if spot is taken, a new random spot is generated

        Random random = new Random();

        while (tttField[x][y] != ' ') {

            x = random.nextInt(2 + 1 - 0 ); //min 0, max 2;
            y = random.nextInt(2 + 1 - 0 ); //min 0, max 2;

        }

        tttField[x][y] = 'X';

        return tttField;

    }

    public static boolean checkWinPlayer(char[][] tttField) {

        boolean win = false;

        if (tttField[0][0] == 'O' && tttField[1][0] == 'O' && tttField[2][0] == 'O') {
            win = true;
        } else if (tttField[0][1] == 'O' && tttField[1][1] == 'O' && tttField[2][1] == 'O') {
            win = true;
        } else if (tttField[0][2] == 'O' && tttField[1][2] == 'O' && tttField[2][2] == 'O') {
            win = true;
        } else if (tttField[0][0] == 'O' && tttField[1][1] == 'O' && tttField[2][2] == 'O') {
            win = true;
        } else if (tttField[0][2] == 'O' && tttField[1][1] == 'O' && tttField[2][0] == 'O') {
            win = true;
        } else if (tttField[0][0] == 'O' && tttField[0][1] == 'O' && tttField[0][2] == 'O') {
            win = true;
        } else if (tttField[1][0] == 'O' && tttField[1][1] == 'O' && tttField[1][2] == 'O') {
            win = true;
        } else if (tttField[2][0] == 'O' && tttField[2][1] == 'O' && tttField[2][2] == 'O') {
            win = true;
        }

        return win;

    }

    public static boolean checkWinCP(char[][] tttField) {

        boolean win = false;

        if (tttField[0][0] == 'X' && tttField[1][0] == 'X' && tttField[2][0] == 'X') {
            win = true;
        } else if (tttField[0][1] == 'X' && tttField[1][1] == 'X' && tttField[2][1] == 'X') {
            win = true;
        } else if (tttField[0][2] == 'X' && tttField[1][2] == 'X' && tttField[2][2] == 'X') {
            win = true;
        } else if (tttField[0][0] == 'X' && tttField[1][1] == 'X' && tttField[2][2] == 'X') {
            win = true;
        } else if (tttField[0][2] == 'X' && tttField[1][1] == 'X' && tttField[2][0] == 'X') {
            win = true;
        } else if (tttField[0][0] == 'X' && tttField[0][1] == 'X' && tttField[0][2] == 'X') {
            win = true;
        } else if (tttField[1][0] == 'X' && tttField[1][1] == 'X' && tttField[1][2] == 'X') {
            win = true;
        } else if (tttField[2][0] == 'X' && tttField[2][1] == 'X' && tttField[2][2] == 'X') {
            win = true;
        }

        return win;

    }

    public static void printField(char[][] tttField) {

        for (int i = 0; i < tttField.length; i++) {

            if (i > 0) {
                System.out.println("------");
            }

            for (int j = 0; j < tttField.length; j++) {
                System.out.print(tttField[i][j]);
                if (j < (tttField.length - 1)) {
                    System.out.print("|");
                }
                if (j == 2) {
                    System.out.println();
                }
            }

        }

    }

}
